import org.apache.tools.ant.taskdefs.condition.Os

plugins {
    id 'myproject.java-conventions'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'org.beryx.runtime' version '1.12.7'
}

apply plugin: 'com.github.johnrengelman.shadow'


dependencies {
    implementation project(':lib')

    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.13.3'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.3'
    implementation 'org.jetbrains.kotlinx:kotlinx-cli:0.3.4'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4'
    implementation 'com.github.lgooddatepicker:LGoodDatePicker:11.2.1'
}

application {
    mainClass = 'gui.GuiMain'
}

jpackageImage.dependsOn copyInstallerResources

String osPrefix = (Os.isFamily(Os.FAMILY_WINDOWS)) ? 'win' : ((Os.isFamily(Os.FAMILY_MAC)) ? 'mac' : 'linux')
String iconExt = (Os.isFamily(Os.FAMILY_WINDOWS)) ? 'ico' : ((Os.isFamily(Os.FAMILY_MAC)) ? 'icns' : 'png')
runtime {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']

    additive = true
    modules = ['jdk.crypto.cryptoki']

    jpackage {
        imageName = rootProject.name
        imageOptions = ['--icon', "$rootDir/res/icons/app_icon.$iconExt"]

        installerName = rootProject.name
        installerOutputDir = file("$rootDir/out/executable/basic")
        installerType = (Os.isFamily(Os.FAMILY_WINDOWS)) ? 'msi' : ((Os.isFamily(Os.FAMILY_MAC)) ? 'pkg' : 'deb')
        installerOptions = ['--file-associations', "$projectDir/res/kurswahl.properties",
                            '--vendor', '"Willi-Graf-Gymnasium"',
                            '--description', "\"$description\"",
                            '--copyright', '"Copyright Hendrik Horstmann 2023, All rights reserved"',
                            '--about-url', 'https://github.com/heinrich26/kurswahlApp',
                            '--license-file', "$rootDir/COPYRIGHT",
                            '--verbose',
                            "@res/$osPrefix-opts.txt"]

        resourceDir = file("$buildDir/$resDirName")
    }
}
