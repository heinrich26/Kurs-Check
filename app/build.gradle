//file:noinspection GroovyAccessibility
import org.apache.tools.ant.taskdefs.condition.Os
import org.beryx.runtime.JPackageTask

plugins {
    id 'myproject.java-conventions'
    id 'org.beryx.runtime' version '1.12.7'
    id "org.jetbrains.gradle.plugin.idea-ext" version "1.1.7"
}


dependencies {
    implementation project(':lib')

    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.16.1'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.16.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-cli:0.3.6'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.3'
    implementation 'com.github.lgooddatepicker:LGoodDatePicker:11.2.1'
}

sourceSets {
    main.kotlin.srcDirs += "build/generated/sources/vectors/main"
}
idea.module.settings.packagePrefix["src/main/kotlin"] = group

application {
    mainClass = "${group}.gui.GuiMain"
}

compileKotlin.dependsOn(':resource-generator:processVectors')
jpackageImage.dependsOn(copyInstallerResources, downloadSchoolsData)


def buildDir = layout.buildDirectory
def (osPrefix, iconExt, packageType) =
Os.isFamily(Os.FAMILY_WINDOWS) ? ['win', 'ico', 'msi'] :
        Os.isFamily(Os.FAMILY_MAC) ? ['mac', 'icns', 'pkg'] :
                ['linux', 'png', 'deb']
def javaModules = ['java.base', 'java.datatransfer', 'java.desktop', 'java.logging', 'java.management','java.net.http', 'java.prefs', 'java.xml', 'jdk.crypto.cryptoki', 'jdk.crypto.ec']

runtime {
    addOptions '--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages'
    modules.set(javaModules)

    jpackage {
        imageName = rootProject.name
        imageOptions = ['--icon', "$rootDir/res/icons/app_icon.$iconExt"]

        installerName = rootProject.name
        installerOutputDir = file("$rootDir/out/executable/basic")
        installerType = packageType
        installerOptions = ['--file-associations', buildDir.file("$resDirName/kurswahl-${osPrefix}.properties").get().toString(),
                            '--vendor', '"Willi-Graf-Gymnasium"',
                            '--description', "\"$description\"",
                            '--copyright', "\"Copyright Hendrik Horstmann ${Calendar.instance.get(Calendar.YEAR)}, Alle Rechte vorbehalten\"",
                            '--about-url', 'https://github.com/heinrich26/kurswahlApp',
                            '--license-file', "$rootDir/COPYRIGHT",
                            "@res/$osPrefix-opts.txt"]

        resourceDir = buildDir.dir(resDirName).get().asFile
    }
}

tasks.register('buildRPM', JPackageTask) {
    runtime {
        addOptions '--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages'

        modules.set(javaModules)

        jpackage {
            imageName = rootProject.name
            imageOptions = ['--icon', "$rootDir/res/icons/app_icon.png"]

            installerName = rootProject.name
            installerOutputDir = file("$rootDir/out/executable/basic")
            installerType = 'rpm'
            installerOptions = ['--file-associations', buildDir.file("$resDirName/kurswahl-${osPrefix}.properties").get().toString(),
                                '--vendor', '"Willi-Graf-Gymnasium"',
                                '--description', "\"$description\"",
                                '--copyright', "\"Copyright Hendrik Horstmann ${Calendar.instance.get(Calendar.YEAR)}, Alle Rechte vorbehalten\"",
                                '--about-url', 'https://github.com/heinrich26/kurswahlApp',
                                '--license-file', "$rootDir/COPYRIGHT",
                                "@res/linux-opts.txt"]

            resourceDir = buildDir.dir(resDirName).get().asFile
        }
    }
}
