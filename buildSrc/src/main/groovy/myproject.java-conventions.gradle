import java.nio.file.Files

plugins {
    id 'org.jetbrains.kotlin.jvm'
    id 'java'
}

group 'com.kurswahlApp'

def javaVersion = JavaVersion.VERSION_18

kotlin {
    jvmToolchain(javaVersion.majorVersion.toInteger())
}

repositories {
    mavenCentral()
}

dependencies {
    implementation platform('org.jetbrains.kotlin:kotlin-bom') // <4>

    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.9.20' // <5>
    implementation 'org.jetbrains.kotlin:kotlin-reflect:1.9.20'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
}

test {
    useJUnitPlatform()
}

project.extensions.add(TypeOf.typeOf(String), "resDirName", "installerResources")

tasks.register('copyInstallerResources', Copy) {
    from("${rootProject.projectDir}/res/icons") {
        include 'app_icon.ico', 'app_icon.icns', 'app_icon.png'
        rename 'app_icon(.*)', "${rootProject.name}\$1"
    }
    from layout.projectDirectory.dir("res"), "${rootProject.projectDir}/app/res"
    into layout.buildDirectory.dir((String) project.resDirName)
}

tasks.register('downloadSchoolsData') {
    def f = file("$buildDir/resources/main/schools-data/per-school-settings.json")

    doFirst {
        Files.createDirectories(f.parentFile.toPath())
        new URL('https://raw.githubusercontent.com/heinrich26/Kurs-Check/data/per-school-settings.json')
                .withInputStream { i -> f.withOutputStream { it << i }}
    }
}