import org.apache.tools.ant.taskdefs.condition.Os

plugins {
    id 'myproject.java-conventions'
    id 'org.beryx.runtime' version '1.13.0'
}

application {
    mainClass = 'gui.GuiMain'
}

dependencies {
    implementation project(':lib')
    implementation project(':app')

    implementation 'org.jetbrains.kotlinx:kotlinx-cli:0.3.4'
    implementation 'org.apache.commons:commons-csv:1.9.0'
}


//tasks.register('prepInstallerRes', Delete) {
//    delete layout.buildDirectory.dir(resDirName), layout.buildDirectory.dir('temp')
//}

copyInstallerResources.dependsOn(downloadSchoolsData/*, prepInstallerRes*/)
jpackageImage.dependsOn copyInstallerResources

String osPrefix = (Os.isFamily(Os.FAMILY_WINDOWS)) ? 'win' : ((Os.isFamily(Os.FAMILY_MAC)) ? 'mac' : 'linux')
String iconExt = (Os.isFamily(Os.FAMILY_WINDOWS)) ? 'ico' : ((Os.isFamily(Os.FAMILY_MAC)) ? 'icns' : 'png')
runtime {
    addOptions '--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages'

    additive = true
    modules = ['jdk.crypto.cryptoki']

    jpackage {
        imageName = rootProject.name
        imageOptions = ['--add-launcher', "wahl-merger=res/$osPrefix-merger.properties",
                        '--icon', "$rootDir/res/icons/app_icon.$iconExt"]

        installerName = rootProject.name + '-full'
        installerOutputDir = file("$rootDir/out/executable/full")
        installerType = (Os.isFamily(Os.FAMILY_WINDOWS)) ? 'msi' : ((Os.isFamily(Os.FAMILY_MAC)) ? 'pkg' : 'deb')
        installerOptions = ['--file-associations', "$buildDir/$resDirName/kurswahl-${osPrefix}.properties",
                            '--vendor', '"Willi-Graf-Gymnasium"',
                            '--description', "\"$description\"",
                            '--copyright', '"Copyright Hendrik Horstmann 2023, All rights reserved"',
                            '--about-url', 'https://github.com/heinrich26/kurswahlApp',
                            '--license-file', "$rootDir/COPYRIGHT",
                            "@$rootDir/app/res/$osPrefix-opts.txt"]
        resourceDir = file("$buildDir/$resDirName")
    }
}